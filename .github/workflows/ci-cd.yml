name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || echo "Linting not configured yet"

    - name: Run tests
      run: npm test

    - name: Validate configuration
      run: |
        # Validate wrangler.toml syntax
        npx wrangler whoami
        echo "Configuration validation complete"

  deploy-staging:
    name: Deploy to Staging (Preview)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Fix security vulnerabilities
      run: npm run audit:fix

    - name: Deploy to Cloudflare Pages (Preview)
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: karirhub-rss
        directory: .
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}

    - name: Health check staging
      run: |
        sleep 10
        curl -f https://karirhub-rss.pages.dev/health || exit 1
        echo "Staging deployment health check passed"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Fix security vulnerabilities
      run: npm run audit:fix

    - name: Deploy to Cloudflare Pages (Production)
      uses: cloudflare/pages-action@v1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        projectName: karirhub-rss
        directory: .
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        deployment-trigger: push

    - name: Health check production
      run: |
        sleep 10
        curl -f https://karirhub-rss.pages.dev/health || exit 1
        echo "Production deployment health check passed"

    - name: Update deployment status
      if: success()
      run: |
        echo "ðŸŽ‰ Production deployment successful!"
        echo "RSS Feed: https://karirhub-rss.pages.dev/rss"
        echo "JSON Feed: https://karirhub-rss.pages.dev/json"
        echo "Health: https://karirhub-rss.pages.dev/health"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD